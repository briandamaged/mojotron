// Table of contents
//	Controls
//	Levels
//	Surfaces
//	Sounds
//	Fonts
//	Testing
//	Constants
//	Intro
//	MonsterSpecs
//	PlayerSpecs
//	Bonus
//	FruitCombos
//	See sound.scr for sounds

section Controls
{
	section Player1
	{
		//keyboardno = 0 (type=integer);
		usekey = 62 (type=integer); 	// spacebar
		movement = "cursorkeys" (type=string);
		aiming = "wasd" (type=string);
		//movementjoy = 1 (type=integer);
		//aimingjoy = 2 (type=integer);
	}
	section Player2
	{
		usekey = 61 (type=integer); // enter
		movement = "abovecursors" (type=string);
		aiming = "ijkl" (type=string);
	}

	keygroups = "none,cursorkeys,wasd,ijkl,vi,keypad,abovecursors" (type=string);

	// keygroups, avoid editing
	// (codes from ClanLib's key.h)
	section none
	{
		up = 81 (type=integer);
		left = 81 (type=integer);
		down = 81 (type=integer);
		right = 81 (type=integer);
	}

	section cursorkeys
	{
		up = 52 (type=integer);  // somehow linked to 67
		left = 50 (type=integer);
		down = 53 (type=integer);
		right = 51 (type=integer);
	}

	section wasd
	{
		up = 23 (type=integer);
		left = 1 (type=integer);
		down = 19 (type=integer);
		right = 4 (type=integer);
	}

	section ijkl
	{
		up = 9 (type=integer);
		left = 10 (type=integer);
		down = 11 (type=integer);
		right = 12 (type=integer);
	}

	section vi  // hjkl keys
	{
		up = 11 (type=integer);
		left = 8 (type=integer);
		down = 10 (type=integer);
		right = 12 (type=integer);
	}

	section keypad // doesn't work, uses main keyboard numbers
	{
		up = 35 (type=integer);
		left = 31 (type=integer);
		down = 29 (type=integer);
		right = 33 (type=integer);
	}
	
	section abovecursors
	{
		up = 66 (type=integer);
		left = 65 (type=integer);
		down = 67 (type=integer); // using the End key doesn't work on my machine. Up cursor triggers this tho.
		right = 69 (type=integer);
	}
}

section Levels
{
	section level1
	{
		lev_name = "Kill all moving objects" (type=string); // levels without a name are deemed to be non-existant
		warp_time = 1 (type=integer);
		// background colour in percentages
		bg_red = 0 (type=integer); bg_green= 0 (type=integer); bg_blue = 60 (type=integer); 

		num_soldiers = 3 (type=integer);
		num_rightanglers = 3 (type=integer);
		num_snipers = 2 (type=integer);
		num_spikers = 1 (type=integer);
		num_barricades = 5 (type=integer);

		dropbarricades = 1 (type=integer);
	}
	section level2
	{
		lev_name = "Kill all moving objects" (type=string); // levels without a name are deemed to be non-existant
		warp_time = 1 (type=integer);
		// background colour in percentages
		bg_red = 0 (type=integer); bg_green= 60 (type=integer); bg_blue = 0 (type=integer); 

		num_soldiers = 6 (type=integer);
		num_rightanglers = 6 (type=integer);
		num_snipers = 4 (type=integer);
		num_spikers = 2 (type=integer);
		num_barricades = 15 (type=integer);

		dropbarricades = 1 (type=integer);
	}
	section level3
	{
		lev_name = "Kill all moving objects" (type=string); // levels without a name are deemed to be non-existant
		warp_time = 1 (type=integer);
		// background colour in percentages
		bg_red = 50 (type=integer); bg_green= 0 (type=integer); bg_blue = 80 (type=integer); 

		num_soldiers = 10 (type=integer);
		num_rightanglers = 10 (type=integer);
		num_snipers = 6 (type=integer);
		num_spikers = 3 (type=integer);
		num_barricades = 25 (type=integer);

		dropbarricades = 1 (type=integer);
	}
	section level4
	{
		lev_name = "Kill all moving objects" (type=string); // levels without a name are deemed to be non-existant
		warp_time = 1 (type=integer);
		// background colour in percentages
		bg_red = 100 (type=integer); bg_green= 50 (type=integer); bg_blue = 0 (type=integer); 

		num_soldiers = 15 (type=integer);
		num_rightanglers = 15 (type=integer);
		num_snipers = 5 (type=integer);
		num_spikers = 4 (type=integer);
		num_barricades = 25 (type=integer);
		num_circleboss = 2 (type=integer);

		dropbarricades = 1 (type=integer);
	}
	section level5
	{
		lev_name = "Kill all moving objects" (type=string); // levels without a name are deemed to be non-existant
		warp_time = 1 (type=integer);
		// background colour in percentages
		bg_red = 80 (type=integer); bg_green= 0 (type=integer); bg_blue = 0 (type=integer); 

		num_soldiers = 20 (type=integer);
		num_rightanglers = 20 (type=integer);
		num_snipers = 12 (type=integer);
		num_spikers = 6 (type=integer);
		num_barricades = 25 (type=integer);
		num_simpleboss = 2 (type=integer);

		dropbarricades = 1 (type=integer);
	}

}

section Surfaces
{
	key = "graphics/key.pcx" (type=surface, x=0, y=0, width=48, height=48, tcol=1); // as in keyboard
	bubble = "graphics/bubble.pcx" (type=surface, x=0, y=0, width=48, height=48, tcol=0, array=2x1);
	reel = "graphics/reel.pcx" (type=surface, x=0, y=0, width=28, height=28);
	livesicon = "graphics/heart.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	levelicon = "graphics/level.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	timeicon = "graphics/warptime.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	stars = "graphics/starfield.pcx" (type=surface, x=0, y=0, width=42, height=42);
	mediumexplode = "graphics/splashchunky.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=6x2);

	//player1 = "graphics/monkey.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=22, array=6x2);
	player1 = "graphics/toilet.pcx" (type=surface, x=0, y=0, width=64, height=64, tcol=0, array=8x1);
	player2 = "graphics/greenmonkey.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=6x2);
	player3 = "graphics/monkey.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=22, array=6x2);
	player4 = "graphics/monkey.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=22, array=6x2);
	heart = "graphics/heart.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	pellet = "graphics/pellet.pcx" (type=surface, x=0, y=0, width=7, height=7, tcol=0);
	ball = "graphics/largersaw.pcx" (type=surface, x=0, y=0, width=28, height=28, tcol=0, array=4x1);
	obstacle = "graphics/mushroom.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=4x4);
	asteroid = "graphics/eyeball.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=16, array=8x3);
	sniper = "graphics/bunny.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=1x1);
	drone = "graphics/bunny.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=1x1);
	boss = "graphics/toilet.pcx" (type=surface, x=0, y=0, width=64, height=64, tcol=0, array=8x1);
	bomb = "graphics/blackbullet.pcx" (type=surface, x=0, y=0, width=10, height=10, tcol=0);
	spiker = "graphics/bee.pcx" (type=surface, x=0, y=0, width=32, height=24, tcol=0, array=2x1);
	//rightangler = "graphics/frog.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=3x1);
	rightangler = "graphics/monkey.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=22, array=6x2);
	pod = "graphics/spike.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=0, array=9x1);
	spike = "graphics/spike.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=0, array=9x1);
	bullet = "graphics/spike.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=0, array=9x1);
	flame = "graphics/flame.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=10x1);
	spark = "graphics/spark.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=10x1);
	signal = "graphics/wave.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=0, array=4x1);
	forcefield = "graphics/crap.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	droid = "graphics/droid.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	roundbullet = "graphics/roundbullet.pcx" (type=surface, x=0, y=0, width=10, height=10, tcol=0);
	turret = "graphics/castle.pcx" (type=surface, x=0, y=0, width=32, height=48, tcol=0);
	soldier = "graphics/turret.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	rockman = "graphics/easterhead.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	centipedesegment = "graphics/segment.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=0, array=4x1);
	centipedehead = "graphics/head.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=8, array=4x1);
	cellphone = "graphics/cellphone.pcx" (type=surface, x=0, y=0, width=24, height=32, tcol=0, array=12x1);
	spiral = "graphics/snail.pcx" (type=surface, x=0, y=0, width=32, height=24, tcol=0);
	laserhoriz = "graphics/craplaserhoriz.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	laservert = "graphics/craplaservert.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0);
	//trash = "graphics/trash.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0); 
	//crate = "graphics/crate.pcx" (type=surface, x=0, y=0, width=27, height=27, tcol=0); // Hi OMM!
	trash = "graphics/bubble.pcx" (type=surface, x=0, y=0, width=48, height=48, tcol=0, array=2x1);
	crate = "graphics/bubble.pcx" (type=surface, x=0, y=0, width=48, height=48, tcol=0, array=2x1);

	// grunt sprites
	aolcd = "graphics/aolcd.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=20x1);
	cjt = "graphics/cjt.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=3, array=4x1);
	baby = "graphics/baby.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=4x1);
	ghost = "graphics/ghost.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=8x1);
	burger = "graphics/burger.pcx" (type=surface, x=0, y=0, width=32, height=32, tcol=0, array=4x1);
	dalek = "graphics/dalek.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=0, array=1x1);
	fish = "graphics/fish.pcx" (type=surface, x=0, y=0, width=32, height=24, tcol=0, array=6x1);
	clouds = "graphics/clouds.tga" (type=surface, x=0, y=0, width=64, height=64, array=6x1);
	pokey = "graphics/pokey.pcx" (type=surface, x=0, y=0, width=29, height=41, tcol=119);

	section bonus
	{
		xlife = "graphics/xlife.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		xtime = "graphics/xtime.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		threeway = "graphics/threeway.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=0, array=2x1);
		rearfire = "graphics/rearfire.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=0, array=2x1);
		reflection = "graphics/reflect.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		mines = "graphics/mines.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		bomb = "graphics/bomb.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		shield = "graphics/shield.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		droid = "graphics/droidbonus.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4);
		flame = "graphics/flamebonus.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		speedup = "graphics/speedup.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1); 
		teleport = "graphics/telep.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		repel = "graphics/repel.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4);
		freeze = "graphics/xlife.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1); // not used
		slow = "graphics/slow.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		shades = "graphics/all.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4); 
		machinegun = "graphics/ammo.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4); 
		shrink = "graphics/shrink.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4, array=2x1);
		crate = "graphics/bonuscrate.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4);
		fruit = "graphics/fruit.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=0, array=10x10);
	}
}

section Fonts
{
	largefont = graphics/largefont.tga (type=font, x=0, y=0, trans_limit=0.1, spacelen=12, subtract_width=0, letters="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789,<.>/?;:'-_=+!@#$%^&*");
	smallfont = graphics/smallfont2.tga (type=font, x=0, y=0, trans_limit=0.1, spacelen=8, subtract_width=2, letters="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789,<.>/?;:'-_=+!@#$%^&*}");
}

section Testing
{
	// tcol is a list of transparent indices
	test = "graphics/test.pcx" (type=surface, x=0, y=0, width=174, height=138, tcol=0);
	unknown = "graphics/unknown.pcx" (type=surface, x=0, y=0, width=24, height=24, tcol=4);
	singlegruntsprite = 0 (type=integer);
}

section Constants
{
	monsterspeed = 100 (type=integer); // monster speed tuning. default 100
	gravity = 1 (type=integer);
	musicbpm = 15 (type=integer);
	fruitbonusbounce = 100 (type=integer);	
	
	// above this threshold (ms), movement updates are dropped
	// because they would be too much of a jerk. If all your frames
	// take this long to render, the game will stand still.
	maxdelta = 30000 (type=integer);

	// determines dimensions of area where monsters can't be randomly distributed
 	barepatchwidth = 40000 (type=integer);
	barepatchheight = 40000 (type=integer);
	// how long things wind up to speed for when a level starts (ms)
	startaccelerationlength = 10000 (type=integer);

	deathpause = 500 (type=integer);
	readypause = 1000 (type=integer);
	warppause = 3000 (type=integer);

	recoildistance = 10 (type=integer);

	gruntaccelperiod = 100000 (type=integer); // accelerate every X ms wasted
	gruntaccelnumber = 5 (type=integer); // accelerate every X monsters killed
	playerdeathslowdown = 2 (type=integer); // slow down if the player dies

	bonusspeed = 0 (type=integer);
	bonuslength = 8000 (type=integer);  // how long it runs for
	bonus_timeout = 5000 (type=integer); // how long it survives without being taken
	droidradius = 25000 (type=integer);
	droidspeed = 20 (type=integer);
	droidweardistance = 15000 (type=integer);
	instacratedistance = 20000 (type=integer);
	shrunkenmonstersize = 5 (type=integer);

	bonusinfotimeout = 0 (type=integer); // how long the bonuses name appears on the console
	levelinfotimeout = 20000 (type=integer);
	timebonus = 5 (type=integer);

	minfruitrottime = 15000 (type=integer);
	fruitrottimevariation = 20000 (type=integer);

	levelskip = 7 (type=integer);

	spikerange = 1000 (type=integer);
	flamerange = 5000 (type=integer);
	bombrange = 500 (type=integer);
	flamepower = 700 (type=integer); // hurt per second

	bombspeed = 10 (type=integer);
	flamespeed = 12 (type=integer);
	spikespeed = 35 (type=integer);
	spikehealth = 900 (type=integer);
	roundbulletspeed = 1 (type=integer);
	roundbullethealth = 300 (type=integer); // can't be shot anyway

	barricadehealth = 500 (type=integer);
	barricadespeed = 3 (type=integer);
	barricadefriction = 35 (type=integer);
}

section SkillLevel0
{
	name = "Busy" (type=string);
	// global speed tuning. default 100
	speed = 70 (type=integer);
	// monster quantity multiplier. default 100
	quantity = 100 (type=integer);
}

section SkillLevel1
{
	name = "Frantic" (type=string);
	speed = 100 (type=integer);
	quantity = 100 (type=integer);
}

section SkillLevel2
{
	name = "Mental" (type=string);
	speed = 135 (type=integer);
	quantity = 150 (type=integer);
}

section Intro
{
	
}

section MonsterSpecs
{
	section Ball
	{
		speed = 3 (type=integer);
	}
	section Spiker
	{
		health = 50 (type=integer);
		speed = 25 (type=integer);
	}
	section Sniper
	{
		speed = 1 (type=integer);
		reloadtime = 2500 (type=integer);
	}
	section RightAngler
	{
		huntspeed = 50 (type=integer);
		attackspeed = 20 (type=integer);
	}
	section Drone
	{
		speed = 10 (type=integer);
	}
	section SimpleBoss
	{
		health = 100 (type=integer);
		speed = 4 (type=integer);
		wobblespeed = 14 (type=integer);
		reloadtime = 500 (type=integer);
	}
	section Asteroid
	{
		health = 100 (type=integer);
		bigglobhealth = 100 (type=integer);
		wobblespeed = 1 (type=integer);
		wobbleamplitude = 50000 (type=integer);
		speed = 10 (type=integer);
	}
	section RockMan
	{
		speed = 0 (type=integer);
	}
	section Turret
	{
		health = 500 (type=integer);
		bulletspeed = 6 (type=integer);
		reloadtime = 2000 (type=integer);
		firstfiredelay = 3000 (type=integer); // at start, spend some time before firing 
	}
	section Soldier
	{
		health = 500 (type=integer);
		speed = 20 (type=integer);
		timebetweenlook = 3000 (type=integer);
		bulletspeed = 1 (type=integer);
	}
	section CircleBoss
	{
		health = 100 (type=integer);
		wobblespeed = 27 (type=integer);
		wobbleamplitude = 50000 (type=integer);
	}
	section Centipede
	{
		health = 350 (type=integer);
		speed = 18 (type=integer);
		segmentgap = 4000 (type=integer);
		turningcirc = 133 (type=integer);
		fearinterval = 1000 (type=integer);
		seekaccuracy = 1500 (type=integer); // less is better
	}
	section Cellphone
	{
		health = 200 (type=integer);
		speed = 2 (type=integer);
		timebetweenlook = 2000 (type=integer);
		signalspeed = 40 (type=integer);
	}
	section Spiral
	{
		health = 100 (type=integer);
		speed = 1 (type=integer);
		expandstep = 600 (type=integer);
		minstarttime = -15 (type=integer);	// the lower, the more of a headstart they can get
		startvariation = 15 (type=integer);
	}
	section Laser
	{
		speed = 5 (type=integer);
		firingperiod = 1000 (type=integer);
		reloadperiod = 3000 (type=integer);
		wobblespeed = 4 (type=integer);
		wobbleamplitude = 12000 (type=integer);
	}
	section Conglomerate
	{
		health = 1500 (type=integer);
		speed = 35 (type=integer);
		reloadtime = 800 (type=integer);
		num_tentacles = 7 (type=integer);
	}
}

section PlayerSpecs
{
	health = 400 (type=integer);
	playerspeed = 25 (type=integer);
	speedinc = 2 (type=integer);
	acceleration = 10 (type=integer);
	turninertia = 0 (type=integer);
	maxmomentum = 30000 (type=integer);

	reloadtime = 200 (type=integer);
	fastreloadtime = 125 (type=integer);
	bulletspeed = 50 (type=integer);
	bullettimeout = 3000 (type=integer);
	firepower = 150 (type=integer);		// bang per bullet
	kickpower = 50 (type=integer);	// how far a box gets nudged

	startlives = 3 (type=integer);
}

section Bonus
{
	maxchances = 		1000000 (type=integer);
	xlifechance = 		2000 (type=integer);
	shadeschance = 		5000 (type=integer);
	shieldchance = 		0 (type=integer);
	cratechance = 		10000 (type=integer);
	threewaychance =	0 (type=integer);
	rearfirechance =	0 (type=integer);
	repelchance = 		0 (type=integer);
	slowchance = 		0 (type=integer);
	circledroidchance = 	5000 (type=integer);
	ramdroidchance = 	0 (type=integer);
	flamechance =		1000 (type=integer);
	machinegunchance =	0 (type=integer);
	speedupchance = 	0 (type=integer);   // no longer used
	shrinkchance = 		3000 (type=integer);
	xtimechance = 		0 (type=integer);
	reflectchance =		0 (type=integer);
	mineschance =		0 (type=integer);
	telepchance = 		0 (type=integer);
	bombchance = 		2000 (type=integer);
	// aim for overall: 2-3%

	shadestime = 		1000 (type=integer);
	ramtime =               7000 (type=integer);
	circletime =            5000 (type=integer);
	reflecttime = 		10000 (type=integer);
	machinetime =		7000 (type=integer);
}

section FruitCombos
{
	101010 = 5 (type=integer); // all the reds, gives 3way
	111111 = 1 (type=integer); // all the strawberries
	111111-multiplier = 1 (type=integer);
	121212 = 1 (type=integer);
	121212-multiplier = 1 (type=integer);
	131313 = 1 (type=integer);
	131313-multiplier = 1 (type=integer);

	202020 = 10 (type=integer); // all the oranges, gives flame
	212121 = 1 (type=integer);
	212121-multiplier = 1 (type=integer);
	222222 = 1 (type=integer);
	222222-multiplier = 1 (type=integer);
	232323 = 1 (type=integer);
	232323-multiplier = 1 (type=integer);

	303030 = 11 (type=integer); // all the yellows, gives machgun
	313131 = 1 (type=integer);
	313131-multiplier = 1 (type=integer);
	323232 = 1 (type=integer);
	323232-multiplier = 1 (type=integer);
	333333 = 1 (type=integer);
	333333-multiplier = 1 (type=integer);

	404040 = 16 (type=integer); // all the greens, gives mines
	414141 = 1 (type=integer);
	414141-multiplier = 1 (type=integer);
	424242 = 1 (type=integer);
	424242-multiplier = 1 (type=integer);
	434343 = 1 (type=integer);
	434343-multiplier = 1 (type=integer);

	// blue
	505050 = 9 (type=integer); // all the blues, gives ramdroid
	515151 = 1 (type=integer);
	515151-multiplier = 1 (type=integer);
	525252 = 1 (type=integer);
	525252-multiplier = 1 (type=integer);
	535353 = 1 (type=integer);
	535353-multiplier = 1 (type=integer);

	// rainbows,
	// it might be cool for these to give powerup pairs
	// e.g. threeway+reflect, speed+slowdown, 
	102030 = 2 (type=integer);
	203040 = 3 (type=integer);
	304050 = 4 (type=integer);
	405010 = 8 (type=integer);
	501020 = 18 (type=integer);
	
	302010 = 2 (type=integer);
	403020 = 3 (type=integer);
	504030 = 4 (type=integer);
	105040 = 8 (type=integer);
	201050 = 18 (type=integer);
}
